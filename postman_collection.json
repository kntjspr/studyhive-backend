{
  "info": {
    "name": "StudyHive API",
    "description": "API collection for the StudyHive backend application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "12345678"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "Endpoints for user authentication",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"Password123!\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login with email and password to get access and refresh tokens"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"your-refresh-token\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "refresh-token"]
            },
            "description": "Get a new access token using a refresh token"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"your-refresh-token\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout and invalidate the refresh token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "User",
      "description": "Endpoints for user profile management",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Get the current user's profile information"
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"bio\": \"Student at XYZ University\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            },
            "description": "Update the current user's profile information"
          },
          "response": []
        },
        {
          "name": "Upload Avatar",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "avatar",
                  "type": "file",
                  "src": ""
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/avatar",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "avatar"]
            },
            "description": "Upload a profile avatar image"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tasks",
      "description": "Endpoints for task management",
      "item": [
        {
          "name": "Create Task",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Complete assignment\",\n    \"description\": \"Finish the math homework\",\n    \"dueDate\": \"2025-04-15T23:59:59Z\",\n    \"priority\": \"high\",\n    \"status\": \"todo\",\n    \"tags\": [\"school\", \"math\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"]
            },
            "description": "Create a new task"
          },
          "response": []
        },
        {
          "name": "Get Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks?status=todo&priority=high&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks"],
              "query": [
                {
                  "key": "status",
                  "value": "todo",
                  "description": "Filter by status (todo, in_progress, completed)"
                },
                {
                  "key": "priority",
                  "value": "high",
                  "description": "Filter by priority (low, medium, high)"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Get all tasks for the current user with optional filters and pagination"
          },
          "response": []
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "task-id",
                  "description": "Task ID"
                }
              ]
            },
            "description": "Get a specific task by ID"
          },
          "response": []
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated task title\",\n    \"description\": \"Updated task description\",\n    \"dueDate\": \"2025-04-20T23:59:59Z\",\n    \"priority\": \"medium\",\n    \"status\": \"in_progress\",\n    \"tags\": [\"school\", \"math\", \"updated\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tasks/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "task-id",
                  "description": "Task ID"
                }
              ]
            },
            "description": "Update an existing task"
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "task-id",
                  "description": "Task ID"
                }
              ]
            },
            "description": "Delete a task"
          },
          "response": []
        },
        {
          "name": "Toggle Task Completion",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tasks/:id/complete",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tasks", ":id", "complete"],
              "variable": [
                {
                  "key": "id",
                  "value": "task-id",
                  "description": "Task ID"
                }
              ]
            },
            "description": "Toggle the completion status of a task"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Events",
      "description": "Endpoints for event management",
      "item": [
        {
          "name": "Create Event",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Study Group Meeting\",\n    \"description\": \"Weekly study group for calculus\",\n    \"startDate\": \"2025-03-20T14:00:00Z\",\n    \"endDate\": \"2025-03-20T16:00:00Z\",\n    \"location\": \"Library, Room 204\",\n    \"isAllDay\": false,\n    \"color\": \"#4285F4\",\n    \"reminders\": [\n        {\n            \"time\": \"2025-03-20T13:30:00Z\",\n            \"type\": \"notification\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events"]
            },
            "description": "Create a new event"
          },
          "response": []
        },
        {
          "name": "Get Events",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events?startDate=2025-03-01T00:00:00Z&endDate=2025-03-31T23:59:59Z&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2025-03-01T00:00:00Z",
                  "description": "Filter events starting from this date"
                },
                {
                  "key": "endDate",
                  "value": "2025-03-31T23:59:59Z",
                  "description": "Filter events ending before this date"
                },
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number for pagination"
                },
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of items per page"
                }
              ]
            },
            "description": "Get all events for the current user with optional date range filtering and pagination"
          },
          "response": []
        },
        {
          "name": "Get Event by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-id",
                  "description": "Event ID"
                }
              ]
            },
            "description": "Get a specific event by ID"
          },
          "response": []
        },
        {
          "name": "Update Event",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Study Group Meeting\",\n    \"description\": \"Weekly study group for calculus - updated\",\n    \"startDate\": \"2025-03-21T15:00:00Z\",\n    \"endDate\": \"2025-03-21T17:00:00Z\",\n    \"location\": \"Library, Room 205\",\n    \"isAllDay\": false,\n    \"color\": \"#34A853\",\n    \"reminders\": [\n        {\n            \"time\": \"2025-03-21T14:30:00Z\",\n            \"type\": \"notification\"\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/events/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-id",
                  "description": "Event ID"
                }
              ]
            },
            "description": "Update an existing event"
          },
          "response": []
        },
        {
          "name": "Delete Event",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/events/:id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "events", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "event-id",
                  "description": "Event ID"
                }
              ]
            },
            "description": "Delete an event"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        },
        "description": "Check if the API server is running"
      },
      "response": []
    }
  ],
  "event": [],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string",
      "description": "Base URL for the API"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string",
      "description": "JWT access token"
    }
  ]
} 